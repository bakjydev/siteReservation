'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var core = require('@fullcalendar/core');
var premiumCommonPlugin = require('@fullcalendar/premium-common');
var resourcePlugin = require('@fullcalendar/resource');
var dayGridPlugin = require('@fullcalendar/daygrid');
var internalCommon = require('./internal.js');
require('@fullcalendar/core/internal');
require('@fullcalendar/core/preact');
require('@fullcalendar/daygrid/internal');
require('@fullcalendar/resource/internal');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var premiumCommonPlugin__default = /*#__PURE__*/_interopDefaultLegacy(premiumCommonPlugin);
var resourcePlugin__default = /*#__PURE__*/_interopDefaultLegacy(resourcePlugin);
var dayGridPlugin__default = /*#__PURE__*/_interopDefaultLegacy(dayGridPlugin);

var index = core.createPlugin({
    name: '@fullcalendar/resource-daygrid',
    premiumReleaseDate: '2023-01-11',
    deps: [
        premiumCommonPlugin__default["default"],
        resourcePlugin__default["default"],
        dayGridPlugin__default["default"],
    ],
    initialView: 'resourceDayGridDay',
    views: {
        resourceDayGrid: {
            type: 'dayGrid',
            component: internalCommon.ResourceDayTableView,
            needsResourceData: true,
        },
        resourceDayGridDay: {
            type: 'resourceDayGrid',
            duration: { days: 1 },
        },
        resourceDayGridWeek: {
            type: 'resourceDayGrid',
            duration: { weeks: 1 },
        },
        resourceDayGridMonth: {
            type: 'resourceDayGrid',
            duration: { months: 1 },
            // TODO: wish we didn't have to C&P from dayGrid's file
            monthMode: true,
            fixedWeekCount: true,
        },
    },
});

exports["default"] = index;
